<?php


class PostCategoryController extends CController
{
    public $_posts;

    public function __construct($slug, $layout = '')
    {
        parent::__construct();

        $this->_slug = $slug;
        $this->_data = CFrontCategoryPost::GetDatas($slug);


        if (!$this->_data) {
            $redirect_check = CStdRedirects::GetRedirect($this->_slug, self::$_contextID);
            if ($redirect_check !== false) {
                header('Location: ' . $redirect_check);
                die;
            } else {
                $this->not_found();
            }
        }
        $this->_uID = $this->_data['cid'];

        self::$_menuElemID = $this->_uID;

        $this->_posts = CFrontCategoryPost::GetAllPosts($this->_uID, null, self::$_limitPerPage, self::$_currentPage);

        self::$_pageCount = CFrontCategoryPost::GetPageCount($this->_uID, self::$_limitPerPage);

        $this->seo = CFrontSeo::GetDatas($this->_data['category_seo']);

        if ($this->_data['category_parent'] == 0) {
            $this->is_main_cat = true;
        } else {
            $this->is_main_cat = false;
        }
        self::$_breadcrumb = [
            ['type' => 'home', 'label' => CDictionaryUser::GetKey('home'), 'id' => null, 'active' => false]
        ];

        $this->cat_tree = CFrontCategoryPost::GetCatsTree($this->_uID);
        if ($this->is_main_cat) {
            $this->child_cats = CFrontCategoryPost::GetCategoriesByParent($this->_uID);
        } else {
            if (count($this->cat_tree) == 2) {
                $this->child_cats = CFrontCategoryPost::GetCategoriesByParent($this->_uID);
            }
            if (count($this->cat_tree) == 3) {
                $this->child_cats = CFrontCategoryPost::GetCategoriesByParent($this->_data['category_parent']);
            }
        }
        //---post files
        $attach_decoded = json_decode($this->_data['category_gallery'], true);
        $attach_array = [];
        foreach ($attach_decoded as $cover) {
            $attach_array[] = $cover['id'];
        }
        $attach_url = CFrontAttach::GetImageUrl($attach_array);
        foreach ($attach_decoded as $key => $item) {
            $attach_decoded[$key]['url'] = $attach_url[(int)$item['id']];
        }
        $this->files = $attach_decoded;
        //----------
//        var_dump($this->child_cats);

        foreach ($this->cat_tree as $cat) {
            self::$_breadcrumb[] = ['type' => 'post_category', 'label' => $cat['title'], 'id' => $cat['cid'], 'active' => true];
        }
        $_SESSION['history']['contextID'] = self::$_contextID;
        $_SESSION['history']['uID'] = $this->_uID;

    }

    public function start()
    {
        if (file_exists(self::$_controller->_viewDir . DIRECTORY_SEPARATOR . self::$_controllerID . '/category-' . $this->_data['cid'] . '.php')) {
            $this->_viewFile = '/category-' . $this->_data['cid'] . '.php';
        }
        return parent::start(); // TODO: Change the autogenerated stub
    }

}